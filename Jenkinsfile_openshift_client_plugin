def templatePath = 'nhkchan/springtestdocker:latest'
def templateName = 'springtestdocker'
pipeline {

  agent any
  
  options {
    timeout(time: 20, unit: 'MINUTES') 
  }
  stages {
    stage('preamble') {
        steps {
            script {
                openshift.withCluster( 'openshiftonline' ) {
                    openshift.withProject() {
                        echo "Using project: ${openshift.project()}"
                    }
                }
            }
        }
    }
    stage('cleanup') {
      steps {
        script {
            openshift.withCluster( 'openshiftonline' ) {
                openshift.withProject() {
                  openshift.selector("all", [ template : templateName ]).delete() 
                  if (openshift.selector("secrets", templateName).exists()) { 
                    openshift.selector("secrets", templateName).delete()
                  }
                }
            }
        }
      }
    }
    stage('create') {
      steps {
        script {
            openshift.withCluster( 'openshiftonline' ) {
                openshift.withProject() {
                  if (openshift.selector("dc", templateName).exists()) {
                    echo "Already Exists, skipping create"
                  } else {
                    openshift.newApp(templatePath) 
                    }
                }
            }
        }
      }
    }
    stage('deploy') {
      steps {
        script {
            openshift.withCluster( 'openshiftonline' ) {
                openshift.withProject() {
                  def depcon = openshift.selector("dc", templateName)
                  depcon.describe()
                  def rm = depcon.rollout()
                  rm.latest()
                  timeout(5) { 
                    openshift.selector("dc", templateName).related('pods').untilEach(1) {
                      return (it.object().status.phase == "Running")
                    }
                  }
                }
            }
        }
      }
    }
    stage('tag') {
      steps {
        script {
            openshift.withCluster( 'openshiftonline' ) {
                openshift.withProject() {
                  openshift.tag("${templateName}:latest", "${templateName}-staging:latest") 
                }
            }
        }
      }
    }
  }
}